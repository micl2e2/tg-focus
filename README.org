#+title: TG-Focus
#+options: toc:1 num:nil

* TG-FocusðŸ’¡

<a href="https://github.com/micl2e2/tg-focus/blob/master/LICENSE-GPL">![GitHub License](https://img.shields.io/github/license/micl2e2/tg-focus?logo=gnu&color=blue&link=https%3A%2F%2Fgithub.com%2Fmicl2e2%2Ftg-focus%2Fblob%2Fmaster%2FLICENSE-GPL)</a>
<a href="https://core.telegram.org/tdlib">![Static Badge](https://img.shields.io/badge/tdlib-1.8.46-%2332a9de)</a>
<a href="https://github.com/tdlib/td">![GitHub commits difference between two branches/tags/commits](https://img.shields.io/github/commits-difference/tdlib/td?base=347bd31a30dd479fc4c5fa966316fb2834802bf8&head=master&logo=gitextensions&label=pending&color=lightblue&link=https%3A%2F%2Fgithub.com%2Ftdlib%2Ftd)</a>

tg-focus is a reliable Telegram message filter/forwarder that helps
you *focus*. A gentle user bot for message forwarding. Most of
message types are supported: public/private chats, channel updates,
and more.

By customizing /filters/ through TGFCMD, tg-focus can forward any specific
message from any chat to a dedicated chat, *TG-FOCUS*, that way
you have full control of the messages you see.

tg-focus is built on top of [[https://core.telegram.org/tdlib/][TDLib]] directly, in which way tg-focus is
inherently as consistent, reliable and stable as TDLib itself for most
Telegram-specific features.

The supported platforms are:

| OS \ ARCH   | x86 64 | aarch64 |
|-------------+--------+---------|
| Linux       | âœ…     | âœ…      |
| Windows WSL | âœ…     | âœ…      |
| Windows     | ðŸ”¨     | ðŸ”¨      |
| macOS       | ðŸ”¨     | ðŸ”¨      |
|             |        |         |

Supported(âœ…). Work In Progress(ðŸ”¨). 

* Quickstart

The following 6 steps will help you start up tg-focus and filter some
specific messages.

1. Download the binaries at GitHub releases [[https://github.com/micl2e2/tg-focus/releases][page]].

2. Extract the files:

   #+begin_src bash
     # linux 
     tar xf tg-focus-3.0-linux-x86_64.tar.gz
     cd tg-focus-3.0-linux-x86_64
   #+end_src
   
3. Log in your Telegram account:
   
   #+begin_src bash     
     ./tgfocus auth

     # Enter phone number: +1 23 4567
     # Enter login code: xxxxxx
   #+end_src

   /note: phone number in international format =+1 23 4567= if your
   number is =23 4567= with region code =+1= (spaces are allowed)./

   If everthing works fine, you should see:

   #+begin_quote
   Logged in!
   #+end_quote

4. Start up tg-focus daemon:

   #+begin_src bash
     ./tgfocus quickstart
   #+end_src

   /note: conversely, use =./tgfocus shutdown= to shutdown tg-focus/

   If everthing works fine, you should see:

   #+begin_quote
   startup: done
   
   focus-start: done
   #+end_quote

5. Go back to your Telgram application, wait for the TG-FOCUS
   group showing up. /(usually takes up 1~2 mins, depends on your
   network connection)/ 
   
   #+begin_quote
   If TG-FOCUS group doesn't appear, send a message "tg-focus" in a
   random group(e.g. Saved Messages). /This is because by default, only
   messages contain "tg-focus" will be filtered and forwarded./
   #+end_quote

   #+begin_quote
   If TG-FOCUS group doesn't appear after a long wait(e.g. 10 mins),
   run a command =./tgfocus status=, report and open a GitHub issue
   with the command output attached.
   #+end_quote

6. Once the group shown up, you send a message =TGFCMD help= to get
   started. The following image tutorials will show you more details.

** Using TGFCMD

   Say there is a Telegram user, called Bob. He owns
   a group. Every day, plenty of messages are sending out in that
   group, it is too overwhelming, Bob wants to focus on the
   messages that strongly interest him, he decides to use
   tg-focus. After the previous 6-step setup, he now is going to use
   TGFCMD to configure his tg-focus to forward the messages he is
   strongly interested in:

  <img src="docs/imgtuto/tuto1.png" width="500px"/><br/>
  <img src="docs/imgtuto/tuto2.png" width="800px"/><br/>
  <img src="docs/imgtuto/tuto3.png" width="500px"/><br/>
  <img src="docs/imgtuto/tuto4.png" width="550px"/><br/>
  <img src="docs/imgtuto/tuto5.png" width="700px"/><br/>
  <img src="docs/imgtuto/tuto6.png" width="600px"/><br/>
  <img src="docs/imgtuto/tuto7.png" width="550px"/><br/>

* TGFCMD Examples

/Note that TGFCMD commands are to be sent out in the TG-FOCUS group/

To forward the messages that belong to the chat "Freedom User Group":

#+begin_src
TGFCMD filter.edit 1 titles add "Freedom User Group"
#+end_src

To forward the messages that sent by the user "Some One":

#+begin_src
TGFCMD filter.edit 1 senders add "Some One"
#+end_src

To forward the messages that contain a word "freedom":

#+begin_src
TGFCMD filter.edit 1 keywords add "freedom"  
#+end_src

To forward two types of messages, the first contains a word "free
things" and belongs to the chat "Nonfree Lovers", the second contains
a word "nonfree things" and belongs to "Free Lovers":

#+begin_src
TGFCMD filter.edit 1 titles add "Nonfree Lovers"
TGFCMD filter.edit 1 keywords add "free things"
TGFCMD filter.edit 2 titles add "Free Lovers"
TGFCMD filter.edit 2 keywords add "nonfree things"
#+end_src

Not to forward the messages that sent by the user "Nonfree Lover":

#+begin_src
TGFCMD filter.edit 1 no-senders add "Nonfree Lover"
#+end_src

Check current filters configuration:

#+begin_src
TGFCMD filters
#+end_src

Pause forwarding:

#+begin_src
TGFCMD pause
#+end_src

Resume forwarding:

#+begin_src
TGFCMD resume
#+end_src

* Filters Rules

Filters configurationa is composed of many /Focus Filters/. A /Focus
Filter/ is a filter to match against the message's 
chat/sender/content. They have several rules(or properties):

- /titles/
- /keywords/
- /senders/
- /no-titles/
- /no-senders/
- /no-keywords/

Simply put, /titles/, /keywords/, /senders/ are the lists of
chat titles, keywords, senders that you are interested in respectively.
/no-titles/, /no-keywords/, /no-senders/ are the ones you don't want
to see.

Users can add values to those rules as many as they like, they
accept **simple text** or **regular expression**, as well as filters.

When a message comes, filters are tried one by one, if there is any
filter than can *match* the message and not *reject* it, it
will be forwarded to TG-FOCUS chat. 

A focus filter *matches* the message if it matches any filter's:

- /titles/ and
- /senders/ and
- /keywords/

Note that an empty rule(i.e., you haven't configure it) matches
everthing.

If a focus filter  fails to match the incoming message, the next focus
filter will be tried. If all focus filters fail to match it, the
message will be discarded.

A focus filter *rejects* the message if it matches any filter's:

- /no-title/ or
- /no senders/ or
- /no-keywords/

Note thta if any focus filter rejects the message, the next focus
filter will not be tried, and the message will be discarded.

(You can think of the first three rules as /whitelist/,
the last three rules as /blacklist/)

* Contributing

tg-focus is still far from perfect, any form of contribution is
welcomed:

- Ask question (open an issue with label "question")
- Bug Report (open an issue with label "bug")
- Feature Request (open an issue with label "enhancement")
- Documentation Improvement
- Code Contribution (tg-focus follows [GCC](https://gcc.gnu.org/) code
  style)


** ToDo list

This is a list of TODOs that are certainly to be finished in the near
future, you can pick one then get started if you are interested in:

- [ ] More TGFCMD examples in README
- [ ] Project Logo (also used as TG-FOCUS group avatar)
- [ ] Docker/Podman OCI Images
- [ ] Forwarded message's Look
- [ ] Configuration in JSON Format
- [ ] Windows Port
- [ ] BSD Port
- [ ] macOS Port
- [ ] More C++20/23/26 features
- [ ] More different build systems



** Development

*** Linux

Distribution:
- Debian 11 (Bullseye)
  - /note: bullseye-like distros might work, but it won't be
    considered an issue if not working there./
Software:
- bash, git, sudo, apt, etc.
  - run =bash ci/prep-libs-deb11-x86_64.bash= to automatically
    prepare them.
- custom built GCC
  - run =bash ci/prep-toolc-deb11-x86_64.bash= to automatically
    prepare them.
Building:
  - run =bash ci/build-tgfocus-deb11-x86_64.bash= to get a Release
    build.
  - run =DDD=1 bash ci/build-tgfocus-deb11-x86_64.bash= to get a Debug
    build.

* FAQ

** Why yet another Telegram message forwarder?

There are already many TG message forwarders over there, and some of
them have been continuously developed for a long time. I do think most
of them are doing a great job. However what I was looking for was a
message forwarder with a combination of stability, reliability,
transparency, and flexibility, none of them could completely meet my
personal preference, at least in the days before this project
started.

** Can I trust tg-focus?

Yes.

First of all, consider that tg-focus is a GPL-licensed [free
software](https://www.gnu.org/philosophy/free-sw.en.html). As for
privacy, only credentials necessary for tdlib initialization are saved
on the user's machine. And they are completely /yours-irrelavent/. As
for source code, tg-focus's source as well as its dependencies' source
are completely open.

And one more step we take is that, all of released binaries are built
by *not* any individual, but *Github-hosted* machines.
Check [[https://github.com/micl2e2/tg-focus/actions][github actions]] for more details.

* License

tg-focus is licensed under /GNU General Public License Version
3.0/. There is NO WARRANTY, to the extent permitted by law.

